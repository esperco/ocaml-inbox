(* Core types for the Inbox API *)

(* TODO: wrapper types for ids and such *)
type thread_id    = string
type namespace_id = string
type account_id   = string
type tag_id       = string
type message_id   = string
type draft_id     = string
type file_id      = string

(* TODO: If there is a finite set of providers, turn this into a variant. *)
type provider = string

type email = string

type timestamp = int

(** An annotation that specifies what type of object the returned JSON represents. *)
type object_type = [
    Thread <json name="thread">
  | Message <json name="message">
  | Namespace <json name="namespace">
]

type namespace = {
  id : namespace_id;
  object_type : object_type <json name="object">;
  namespace_id : namespace_id;
  account_id : account_id;
  email_address : email;
  provider : provider
}

type participant = {
  name  : string;
  email : email
}

type tag = {
  name : string;
  id   : tag_id
}

type thread = {
  id                      : thread_id;
  object_type             : object_type <json name="object">;
  namespace_id            : namespace_id;
  subject                 : string;
  last_message_timestamp  : timestamp;
  first_message_timestamp : timestamp;
  participants            : participant list;
  snippet                 : string;
  tags                    : tag list;
  message_ids             : message_id list; 
  draft_ids               : draft_id list
}

type file = {
  content_type : string;
  filename     : string;
  id           : file_id;
  size         : int
}

type message = {
  id          : message_id;
  object_type : object_type;
  subject     : string;
  from        : participant list;
  to_         : participant list <json name="to">;
  cc          : participant list;
  bcc         : participant list;
  date        : timestamp;
  thread_id   : thread_id;
  files       : file list;
  snippet     : string;
  body        : string;
  unread      : bool
}
