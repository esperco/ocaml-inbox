(* Core types for the Inbox API *)

(* TODO: wrapper types for ids and such *)
type thread_id            = string
type namespace_id         = string
type account_id           = string
type tag_id               = string
type message_id           = string
type draft_id             = string
type file_id              = string
type calendar_id          = string
type event_id             = string
type event_participant_id = string

type access_token = string

type draft_version = string

(* TODO: If there is a finite set of providers, turn this into a variant. *)
type provider = string

type email = string

type timestamp = int

(** The object you get when you authenticate, containing the
    access_token and/or error information. *)
type authentication_result = {
  ?access_token : access_token option;
  ?error        : string option;
  ?reason       : string option
}

(** An annotation that specifies what type of object the returned JSON represents. *)
type object_type = [
    Thread <json name="thread">
  | Message <json name="message">
  | Draft <json name="draft">
  | Namespace <json name="namespace">
  | Calendar <json name="calendar">
  | Event <json name="event">
  | Timespan <json name="timespan">
  | File <json name="file">
]

type event_status = [
    Yes <json name="yes">
  | No <json name="no">
  | Maybe <json name="maybe">
  | NoReply <json name="noreply">
]

type namespace = {
  id                        : namespace_id;
  ?obj <json name="object"> : object_type option;
  namespace_id              : namespace_id;
  account_id                : account_id;
  email_address             : email;
  provider                  : provider;
  name                      : string
}

type namespace_list = namespace list

type participant = {
  name  : string;
  email : email
}

type tag = {
  name : string;
  id   : tag_id
}

type thread = {
  id                        : thread_id;
  ?obj <json name="object"> : object_type option;
  namespace_id              : namespace_id;
  subject                   : string;
  last_message_timestamp    : timestamp;
  first_message_timestamp   : timestamp;
  participants              : participant list;
  snippet                   : string;
  tags                      : tag list;
  message_ids               : message_id list; 
  draft_ids                 : draft_id list
}

type file = {
  ?obj <json name="object"> : object_type option;
  content_type              : string;
  ~filename                 : string;
  ?id                       : file_id option;
  size                      : int
}

type message = {
  id                        : message_id;
  ?obj <json name="object"> : object_type option;
  subject                   : string;
  from                      : participant list;
  to_ <json name="to">      : participant list;
  cc                        : participant list;
  bcc                       : participant list;
  date                      : timestamp;
  thread_id                 : thread_id;
  files                     : file list;
  snippet                   : string;
  body                      : string;
  unread                    : bool
}

(** An object that specifies a message to create or update---it has no id. *)
type message_edit = {
  ~subject              : string;
  ~to_ <json name="to"> : participant list;
  ~cc                   : participant list;
  ~bcc                  : participant list;
  ~body                 : string;
  ~file_ids             : file_id list;
  ?version              : draft_version option
}

type calendar = {
  ?description              : string option;
  event_ids                 : event_id list;
  id                        : calendar_id;
  name                      : string;
  (* TODO                   : Figure out why this is "namespace" and not "namespace_id". *)
  namespace                 : namespace_id;
  ?obj <json name="object"> : object_type option;
  read_only                 : bool
}

type calendar_list = calendar list

type event_participant = {
  email : email;
  id : event_participant_id;
  name : string;
  status : event_status
} 

type timespan = {
  ?obj <json name="object"> : object_type option;
  (* TODO                   : Use a specific time type. *)
  start_time                : int;
  end_time                  : int;
}

type event = {
  ?obj <json name="object"> : object_type option;
  id                        : event_id;
  calendar_id               : calendar_id;
  namespace_id              : namespace_id;
  ?description              : string option;
  ?location                 : string option;
  participants              : event_participant list;
  read_only                 : bool;
  title                     : string;
  when_ <json name="when">  : timespan 
}

type event_list = event list
